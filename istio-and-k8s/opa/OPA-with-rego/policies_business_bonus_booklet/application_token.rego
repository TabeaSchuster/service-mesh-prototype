package application_token

# loads the public key in PEM format
application_public_key := base64.decode("LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF5MjQvVW5kZXljRGg1ZTZOSFJDQQpXcXBYTHNZT0RMc0JLc3hmcFhhSXBmUjR4ZUdBMDdWeit5S1ZBSnRNby9ndm9ZL1F1UDd4N0kwV2tUS0F2MzExCmVMbjZkUDdNWnJicVJiZUcwK1AyNkVwNURGMmhoNkJTMjNFUWtvMmRubVl2YVgvdzB3RndnL3M5MXMwZ1JWaEsKYjcvV010SUl0NFJGVE9PaTZQYmprVGRBT0QxSW1VQmxMallkNW5ac1pWbzBkWVl6WXExUzR3RzlkOWM0MnIwYQptZTcxM2VqN3lzM1RhMjJrc3hQRVJSZ3Y5dzFpWFpRT2FpaVEyL2FCaDJieHpnR1lrWGwvMDlXcS92c3c2ZjROCndwQS9wVzJnWGlwWEVaS1hPMlBqWldUSlBEN0lPRnVOdExJZnZBcXduajFpUnl2bGN4aGhSc0YwNXBraEtpdGUKYXdJREFRQUIKLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tCg==")
# opa.runtime().env.APPLICATION_PUBLIC_KEY_PEM

# verifies the token signature agains the public key of the application
token_has_valid_signature(token) := io.jwt.verify_rs256(token, application_public_key)
